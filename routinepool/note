note: cq CN 2023-02-24
有限计算机资源下，本hub服务需要支持高并发
1、每日亿级的message和单机10万级的qps
2、peers-[hub]-pees连接管理及大型图谱和消息树的处理
3、peer并发request(同步或异步)和物联网接入的阻塞和非阻塞规约
4、peer使用本SDK同步协议数据时，支持非多线程的开发语言
5、支持hub兼容pub功能时，合机运行，hub(peer+sever管理功能)之间实时同步，并能提供sdk供其他对等点轻松接入

框架（队列+协程池）：
--------------------------------------------------
|                   [job queue]                  |
|     job_alice job_bob job_cindy job_data ...   |
--------------------------------------------------
                       |||
             downward pointing arrow
    ________________________________________
    |             [worker pool]            |
    |     worker_0             worker_1    |
    |                 worker_2             |
    |      worker_3             worker_4   |
    |                 worker_n             |
    |____________________|_________________|
                         |
                         |
                  Job.Do(Interface)

说明：缓冲队列能提高并发，但大规模并发只是推迟[内存/阻塞等]问题的发生时间，例如当请求速度>队列处理速度,
     缓冲区满且请求（外部和内部[peer广播同步]）发生阻塞；
     以上工作模式，根据服务器可利用资源，定义hub工作的线程池（e.g:10万）,生产一个new job，从worker pool
     取出一个worker来执行job(chan信号)，保障goroutine的可控性的同时，尽可能大的提高并发处理能力
     单元测试中场景尽可能多的涉及不同量级的耗能计算，tcp/udp socket，本地/分布式数据库，物联网设备通讯协议，大map内存,
     同步异步场景,长短阻塞场景 ...